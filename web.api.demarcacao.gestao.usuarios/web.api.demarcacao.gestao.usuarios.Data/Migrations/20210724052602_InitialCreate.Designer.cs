// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using web.api.demarcacao.gestao.usuarios.Data.Context;

namespace web.api.demarcacao.gestao.usuarios.Data.Migrations
{
    [DbContext(typeof(DemarcacaoGestaoUsuarioPostgressContext))]
    [Migration("20210724052602_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.Interface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TAG");

                    b.HasKey("Id");

                    b.ToTable("INTERFACE");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Descricao = "Cadastro de Empreendimento",
                            Tag = "CAD_EMP"
                        },
                        new
                        {
                            Id = 2L,
                            Descricao = "Atualização de Empreendimento",
                            Tag = "ATUAL_EMP"
                        },
                        new
                        {
                            Id = 3L,
                            Descricao = "Exclusão de Empreendimento",
                            Tag = "EXC_EMP"
                        },
                        new
                        {
                            Id = 4L,
                            Descricao = "Listagem de Empreendimento",
                            Tag = "LIST_EMP"
                        },
                        new
                        {
                            Id = 5L,
                            Descricao = "Cadastro de Terreno",
                            Tag = "CAD_TERR"
                        },
                        new
                        {
                            Id = 6L,
                            Descricao = "Atualização de Terreno",
                            Tag = "ATUAL_TERR"
                        },
                        new
                        {
                            Id = 7L,
                            Descricao = "Exclusão de Terreno",
                            Tag = "EXC_TERR"
                        },
                        new
                        {
                            Id = 8L,
                            Descricao = "Listagem de Terreno",
                            Tag = "LIST_TERR"
                        });
                });

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LOGIN");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NOME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PASSWORD");

                    b.HasKey("Id");

                    b.ToTable("USUARIO");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Login = "admin",
                            Nome = "Admin",
                            Password = "admin123"
                        },
                        new
                        {
                            Id = 2L,
                            Login = "campo",
                            Nome = "Campo",
                            Password = "campo123"
                        },
                        new
                        {
                            Id = 3L,
                            Login = "cliente",
                            Nome = "Cliente",
                            Password = "cliente123"
                        });
                });

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.UsuarioInterface", b =>
                {
                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_USUARIO");

                    b.Property<long>("IdInterface")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_INTERFACE");

                    b.HasKey("IdUsuario", "IdInterface");

                    b.HasIndex("IdInterface");

                    b.ToTable("USUARIO_INTERFACE");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 1L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 2L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 3L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 4L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 5L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 6L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 7L
                        },
                        new
                        {
                            IdUsuario = 1L,
                            IdInterface = 8L
                        },
                        new
                        {
                            IdUsuario = 2L,
                            IdInterface = 4L
                        },
                        new
                        {
                            IdUsuario = 2L,
                            IdInterface = 5L
                        },
                        new
                        {
                            IdUsuario = 2L,
                            IdInterface = 6L
                        },
                        new
                        {
                            IdUsuario = 2L,
                            IdInterface = 7L
                        },
                        new
                        {
                            IdUsuario = 2L,
                            IdInterface = 8L
                        },
                        new
                        {
                            IdUsuario = 3L,
                            IdInterface = 4L
                        },
                        new
                        {
                            IdUsuario = 3L,
                            IdInterface = 8L
                        });
                });

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.UsuarioInterface", b =>
                {
                    b.HasOne("web.api.demarcacao.gestao.usuarios.Domain.Entities.Interface", "Interface")
                        .WithMany("UsuarioInterfaces")
                        .HasForeignKey("IdInterface")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.api.demarcacao.gestao.usuarios.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioInterfaces")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interface");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.Interface", b =>
                {
                    b.Navigation("UsuarioInterfaces");
                });

            modelBuilder.Entity("web.api.demarcacao.gestao.usuarios.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioInterfaces");
                });
#pragma warning restore 612, 618
        }
    }
}
